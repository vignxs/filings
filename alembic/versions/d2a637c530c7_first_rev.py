"""first rev

Revision ID: d2a637c530c7
Revises: 
Create Date: 2023-03-29 00:37:40.583185

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd2a637c530c7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('IGS_COURSE_ENQUIRY',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('followup_call_date', sa.String(), nullable=True),
    sa.Column('followup_status', sa.String(), nullable=True),
    sa.Column('enquiry_by', sa.String(), nullable=True),
    sa.Column('mobile', sa.BigInteger(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('course', sa.String(), nullable=True),
    sa.Column('fee_structure', sa.String(), nullable=True),
    sa.Column('experience_by', sa.String(), nullable=True),
    sa.Column('info_source', sa.String(), nullable=True),
    sa.Column('purpose', sa.String(), nullable=True),
    sa.Column('mode', sa.String(), nullable=True),
    sa.Column('comments', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_IGS_COURSE_ENQUIRY_id'), 'IGS_COURSE_ENQUIRY', ['id'], unique=False)
    op.create_table('IGS_JOB_SUPPORT',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('candidate_name', sa.String(), nullable=True),
    sa.Column('mobile', sa.BigInteger(), nullable=True),
    sa.Column('technology', sa.String(), nullable=True),
    sa.Column('start_date', sa.String(), nullable=True),
    sa.Column('followup_date', sa.String(), nullable=True),
    sa.Column('resource', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('feedback', sa.String(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('payment_period', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_IGS_JOB_SUPPORT_id'), 'IGS_JOB_SUPPORT', ['id'], unique=False)
    op.create_table('IGS_REQ_DATA',
    sa.Column('req_id', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('mobile', sa.BigInteger(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('pincode', sa.BigInteger(), nullable=True),
    sa.Column('enquired_for', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('req_id')
    )
    op.create_index(op.f('ix_IGS_REQ_DATA_req_id'), 'IGS_REQ_DATA', ['req_id'], unique=False)
    op.create_table('IGS_REQ_SERVICES',
    sa.Column('service_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('service_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('service_id')
    )
    op.create_index(op.f('ix_IGS_REQ_SERVICES_service_id'), 'IGS_REQ_SERVICES', ['service_id'], unique=False)
    op.create_table('IGS_USERS',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('active_flag', sa.BOOLEAN(), nullable=True),
    sa.Column('is_admin', sa.BOOLEAN(), nullable=True),
    sa.Column('apps', sa.ARRAY(sa.String()), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('user_name')
    )
    op.create_index(op.f('ix_IGS_USERS_user_id'), 'IGS_USERS', ['user_id'], unique=False)
    op.create_table('IGS_REQ_GST',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('req_id', sa.String(), nullable=True),
    sa.Column('gst_time', sa.String(), nullable=True),
    sa.Column('period', sa.String(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['req_id'], ['IGS_REQ_DATA.req_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_IGS_REQ_GST_id'), 'IGS_REQ_GST', ['id'], unique=False)
    op.create_table('IGS_REQ_GST_RGST',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('req_id', sa.String(), nullable=True),
    sa.Column('company_name', sa.String(), nullable=True),
    sa.Column('company_address', sa.String(), nullable=True),
    sa.Column('company_city', sa.String(), nullable=True),
    sa.Column('company_pincode', sa.String(), nullable=True),
    sa.Column('company_email', sa.String(), nullable=True),
    sa.Column('employer_pan', sa.String(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['req_id'], ['IGS_REQ_DATA.req_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_IGS_REQ_GST_RGST_id'), 'IGS_REQ_GST_RGST', ['id'], unique=False)
    op.create_table('IGS_REQ_PAN_RGST',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('req_id', sa.String(), nullable=True),
    sa.Column('aadhar', sa.String(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['req_id'], ['IGS_REQ_DATA.req_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_IGS_REQ_PAN_RGST_id'), 'IGS_REQ_PAN_RGST', ['id'], unique=False)
    op.create_table('IGS_REQ_TAX',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('req_id', sa.String(), nullable=True),
    sa.Column('assessment_year', sa.String(), nullable=True),
    sa.Column('pan', sa.String(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['req_id'], ['IGS_REQ_DATA.req_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_IGS_REQ_TAX_id'), 'IGS_REQ_TAX', ['id'], unique=False)
    op.create_table('JOB_SUPPORT_COMMENTS',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_support_id', sa.Integer(), nullable=True),
    sa.Column('comments', sa.String(), nullable=True),
    sa.Column('commented_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['job_support_id'], ['IGS_JOB_SUPPORT.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_JOB_SUPPORT_COMMENTS_id'), 'JOB_SUPPORT_COMMENTS', ['id'], unique=False)
    op.create_table('JOB_SUPPORT_PAYMENT',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_support_id', sa.Integer(), nullable=True),
    sa.Column('candidate_payment_amount', sa.Integer(), nullable=True),
    sa.Column('candidate_payment_status', sa.String(), nullable=True),
    sa.Column('candidate_payment_date', sa.DateTime(), nullable=True),
    sa.Column('resource_payment_amount', sa.Integer(), nullable=True),
    sa.Column('resource_payment_status', sa.String(), nullable=True),
    sa.Column('resource_payment_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['job_support_id'], ['IGS_JOB_SUPPORT.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_JOB_SUPPORT_PAYMENT_id'), 'JOB_SUPPORT_PAYMENT', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_JOB_SUPPORT_PAYMENT_id'), table_name='JOB_SUPPORT_PAYMENT')
    op.drop_table('JOB_SUPPORT_PAYMENT')
    op.drop_index(op.f('ix_JOB_SUPPORT_COMMENTS_id'), table_name='JOB_SUPPORT_COMMENTS')
    op.drop_table('JOB_SUPPORT_COMMENTS')
    op.drop_index(op.f('ix_IGS_REQ_TAX_id'), table_name='IGS_REQ_TAX')
    op.drop_table('IGS_REQ_TAX')
    op.drop_index(op.f('ix_IGS_REQ_PAN_RGST_id'), table_name='IGS_REQ_PAN_RGST')
    op.drop_table('IGS_REQ_PAN_RGST')
    op.drop_index(op.f('ix_IGS_REQ_GST_RGST_id'), table_name='IGS_REQ_GST_RGST')
    op.drop_table('IGS_REQ_GST_RGST')
    op.drop_index(op.f('ix_IGS_REQ_GST_id'), table_name='IGS_REQ_GST')
    op.drop_table('IGS_REQ_GST')
    op.drop_index(op.f('ix_IGS_USERS_user_id'), table_name='IGS_USERS')
    op.drop_table('IGS_USERS')
    op.drop_index(op.f('ix_IGS_REQ_SERVICES_service_id'), table_name='IGS_REQ_SERVICES')
    op.drop_table('IGS_REQ_SERVICES')
    op.drop_index(op.f('ix_IGS_REQ_DATA_req_id'), table_name='IGS_REQ_DATA')
    op.drop_table('IGS_REQ_DATA')
    op.drop_index(op.f('ix_IGS_JOB_SUPPORT_id'), table_name='IGS_JOB_SUPPORT')
    op.drop_table('IGS_JOB_SUPPORT')
    op.drop_index(op.f('ix_IGS_COURSE_ENQUIRY_id'), table_name='IGS_COURSE_ENQUIRY')
    op.drop_table('IGS_COURSE_ENQUIRY')
    # ### end Alembic commands ###
